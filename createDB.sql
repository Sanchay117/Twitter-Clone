-- Table: Users
CREATE TABLE Users (
    UID SERIAL PRIMARY KEY,
    Username VARCHAR(50) NOT NULL UNIQUE,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    DOB DATE NOT NULL,
    Bio TEXT
);

-- Table: Posts
CREATE TABLE Posts (
    PID SERIAL PRIMARY KEY,
    Content TEXT NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Views INT DEFAULT 0,
    Likes INT DEFAULT 0,
    Shares INT DEFAULT 0,
    UID INT NOT NULL,
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE
);

-- Table: Admins
CREATE TABLE Admins (
    AID SERIAL PRIMARY KEY,
    Password VARCHAR(255) NOT NULL
);

-- Table: Currently_Banned
CREATE TABLE Currently_Banned (
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Reason TEXT NOT NULL,
    UID INT NOT NULL,
    AID INT NOT NULL,
    PRIMARY KEY (UID),
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (AID) REFERENCES Admins(AID) ON DELETE CASCADE
);

-- Table: Removed_Posts
CREATE TABLE Removed_Posts (
    AID INT NOT NULL,
    PID INT NOT NULL,
    Reason TEXT NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (AID, PID),
    FOREIGN KEY (AID) REFERENCES Admins(AID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES Posts(PID) ON DELETE CASCADE
);

-- Table: Comments
CREATE TABLE Comments (
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Content TEXT NOT NULL,
    UID INT NOT NULL,
    PID INT NOT NULL,
    PRIMARY KEY (Date, UID, PID),
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES Posts(PID) ON DELETE CASCADE
);

-- Table: Follows
CREATE TABLE Follows (
    UID1 INT NOT NULL,
    UID2 INT NOT NULL,
    PRIMARY KEY (UID1, UID2),
    FOREIGN KEY (UID1) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (UID2) REFERENCES Users(UID) ON DELETE CASCADE
);

-- Table: Friends
CREATE TABLE Friends (
    UID1 INT NOT NULL,
    UID2 INT NOT NULL,
    PRIMARY KEY (UID1, UID2),
    FOREIGN KEY (UID1) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (UID2) REFERENCES Users(UID) ON DELETE CASCADE
);

-- Table: Messages
CREATE TABLE Messages (
    UID1 INT NOT NULL,
    UID2 INT NOT NULL,
    Content TEXT NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UID1, UID2, Date),
    FOREIGN KEY (UID1) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (UID2) REFERENCES Users(UID) ON DELETE CASCADE
);

-- Table: Notification
CREATE TABLE Notification (
    NID SERIAL PRIMARY KEY,
    UID INT NOT NULL,
    SID INT,
    Type VARCHAR(50) NOT NULL,
    PID INT,
    Content TEXT NOT NULL,
    isRead BOOLEAN DEFAULT FALSE,
    Created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES Posts(PID) ON DELETE CASCADE
);

-- Table: Likes
CREATE TABLE Likes (
    UID INT NOT NULL,
    PID INT NOT NULL,
    PRIMARY KEY (UID, PID),
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES Posts(PID) ON DELETE CASCADE
);

-- Table: Reports
CREATE TABLE Reports (
    UID INT NOT NULL,
    PID INT NOT NULL,
    Reason TEXT NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (UID, PID),
    FOREIGN KEY (UID) REFERENCES Users(UID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES Posts(PID) ON DELETE CASCADE
);

